# This code takes the file generated by Splitter.py and creates a pandas csv file in a given directory which contains the EventIDs and the Scores obtained through the SGD Classifier (train and test).
# The parameters must be manually changed if needed.

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import GridSearchCV
from sklearn.linear_model import RidgeCV, SGDClassifier
from sklearn.metrics import roc_curve, roc_auc_score

# Type considered, should be ttbar or W
process_type = 'ttbar'
# Repository containing the results of the experiment
exp_dir = 'C:/Users/vicru/Desktop/StageRousseauM1/PythonML/Megatestnewbase/SortieOPU/'
# Number of events and of random projections to be used for the ROC curves. They must be smaller or equal to the number
# of events and random features produced by opu_output_analysis.
nevents = 10000
ncomp = 5000

with np.load(exp_dir+'traintest.npz') as data:
    X_train = data['X_train'][:nevents, :ncomp]
    X_test = data['X_test'][:nevents, :ncomp]
    y_train = data['y_train'][:nevents]
    y_test = data['y_test'][:nevents]
    weights = data['sample_weight'][:nevents]
    evid_train = data['evid_train'][:nevents]
    evid_test = data['evid_test'][:nevents]
    
clh = SGDClassifier(max_iter=100, loss="log")
gsa = GridSearchCV(clh, 
                   param_grid={"alpha": np.logspace(-3, 2, num=20)}, 
                   n_jobs=-1, verbose=2, cv=3)
gsa.fit(X_train, y_train)

les_scores_train = gsa.predict_proba(X_train)[:,1]
les_scores_test = gsa.predict_proba(X_test)[:,1]

les_scores=np.concatenate((les_scores_train,les_scores_test),axis=None)
evid=np.concatenate((evid_train,evid_test),axis=None)

datas = {'EventID': evid, 'ScoresOPU': les_scores}

scores_avec_eventid=pd.DataFrame(datas)
scores_avec_eventid.to_csv('C:/Users/vicru/Desktop/StageRousseauM1/PythonML/Megatestnewbase/ScoresAvecEvtID/ScoresOPU.csv',index=False)
